"use strict";(self.webpackChunklivecontainer_docs=self.webpackChunklivecontainer_docs||[]).push([[187],{8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var i=n(6540);const a={},s=i.createContext(a);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(s.Provider,{value:t},e.children)}},8732:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"guides/tweaks","title":"Tweaks","description":"LiveContainer provides a way to inject tweaks without injecting it to the app beforehand. Direct injection is still recommended as not all tweaks work correctly with LiveContainer\'s TweakLoader.","source":"@site/docs/guides/tweaks.md","sourceDirName":"guides","slug":"/guides/tweaks","permalink":"/LiveContainer-Docs/docs/guides/tweaks","draft":false,"unlisted":false,"editUrl":"https://github.com/khanhduytran0/LiveContainer/tree/main/docs/docs/guides/tweaks.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Tweaks","sidebar_position":3},"sidebar":"docsSidebar","previous":{"title":"JIT Support","permalink":"/LiveContainer-Docs/docs/guides/jit-support"},"next":{"title":"JIT-Less Diagnose Page","permalink":"/LiveContainer-Docs/docs/guides/jit-less-diagnose-page"}}');var a=n(4848),s=n(8453);const o={title:"Tweaks",sidebar_position:3},r="Using Tweaks",l={},d=[{value:"Adding Tweaks",id:"adding-tweaks",level:2},{value:"Removing Tweaks",id:"removing-tweaks",level:2},{value:"Renaming Tweaks",id:"renaming-tweaks",level:2},{value:"About Tweak Signing",id:"about-tweak-signing",level:2}];function c(e){const t={admonition:"admonition",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"using-tweaks",children:"Using Tweaks"})}),"\n",(0,a.jsx)(t.p,{children:"LiveContainer provides a way to inject tweaks without injecting it to the app beforehand. Direct injection is still recommended as not all tweaks work correctly with LiveContainer's TweakLoader."}),"\n",(0,a.jsx)(t.h2,{id:"adding-tweaks",children:"Adding Tweaks"}),"\n",(0,a.jsx)(t.admonition,{type:"note",children:(0,a.jsx)(t.p,{children:"Managing tweaks is only available in the primary LiveContainer (Blue) and for private apps. If you want to load tweaks for a shared app, convert it to private app before adding tweaks to it. You can convert it back when you are done and the tweak will still work."})}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsx)(t.li,{children:"Go to tweaks tab -> tap the plus button"}),"\n"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"if you want to inject the tweak (global tweak) to all apps in LiveContainer, tap import tweak."}),"\n",(0,a.jsx)(t.li,{children:"If you want to inject the tweak to a specific app, tap create new folder"}),"\n"]}),"\n",(0,a.jsxs)(t.ol,{start:"2",children:["\n",(0,a.jsx)(t.li,{children:"For global tweak, you are done, you can launch the app and see if tweak is successfully loaded."}),"\n",(0,a.jsx)(t.li,{children:"For app-specific tweak, go to the folder you created, and tap the plus button -> import tweak"}),"\n",(0,a.jsx)(t.li,{children:"For app-specific tweak, long press your app -> settings -> tap tweak folder -> select the folder you created"}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"removing-tweaks",children:"Removing Tweaks"}),"\n",(0,a.jsx)(t.p,{children:"Go to tweaks tab -> find your tweak/folder -> slide left -> delete"}),"\n",(0,a.jsx)(t.h2,{id:"renaming-tweaks",children:"Renaming Tweaks"}),"\n",(0,a.jsx)(t.p,{children:"Go to tweaks tab -> find your tweak/folder -> long press -> rename"}),"\n",(0,a.jsx)(t.h2,{id:"about-tweak-signing",children:"About Tweak Signing"}),"\n",(0,a.jsx)(t.p,{children:"Tweak Signing is handled automatically by LiveContainer. Tweaks will be re-sign when it is changed or when its signature is expired. You can still manually re-sign by pressing the sign button near the plus button."}),"\n",(0,a.jsx)(t.p,{children:"advanced\nguides"})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);